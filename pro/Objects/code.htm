<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\code.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\code.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Wed Nov 02 14:10:02 2022
<BR><P>
<H3>Maximum Stack Usage =        176 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; App_Handle &rArr; iap_write_flash &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[53]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[10]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[1e]">AES_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[27]">ATIM_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[23]">BSTIM_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[24]">COMPx_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[20]">DMA_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[29]">GPIO_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[25]">GPTIM0_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[26]">GPTIM1_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[19]">HFDET_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[1c]">I2C_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[11]">IWDT_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[14]">LCD_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[f]">LFDET_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[1f]">LPTIM_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[2a]">LPUART0_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[1b]">LPUART1_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[22]">OPAx_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[12]">SPI1_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[13]">SPI2_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[c]">SVD_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[2b]">SystemInit</a> from system_fm33lc0xx.o(i.SystemInit) referenced from startup_fm33lc0xx.o(.text)
 <LI><a href="#[1a]">U7816_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[15]">UART0_IRQHandler</a> from uart.o(i.UART0_IRQHandler) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[16]">UART1_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[17]">UART4_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[18]">UART5_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[1d]">USB_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[28]">VREF_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[21]">WKUP_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[b]">WWDT_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[2f]">__main</a> from __main.o(!!!main) referenced from startup_fm33lc0xx.o(.text)
 <LI><a href="#[2e]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[2d]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2f]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[30]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[32]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[94]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[95]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[33]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[96]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[45]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[34]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent_end
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[35]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[3a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[97]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[98]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[99]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[a6]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[a8]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[a9]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[aa]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ab]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[ac]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[ad]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[ae]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[af]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[b0]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[b1]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[b2]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[b3]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[31]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[b4]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[37]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[39]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[b5]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; App_Handle &rArr; iap_write_flash &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b6]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[55]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b7]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[40]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ATIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>BSTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>COMPx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>GPTIM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>GPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>HFDET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>IWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>LFDET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>LPTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>LPUART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>OPAx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>U7816_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>VREF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[42]"></a>__2sprintf</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_write_flash
</UL>

<P><STRONG><a name="[44]"></a>__printf</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[36]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[5b]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_write_flash
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Handle
</UL>

<P><STRONG><a name="[91]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_write_flash
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_write_flash
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_ack
</UL>

<P><STRONG><a name="[b9]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[4c]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_data
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Handle
</UL>

<P><STRONG><a name="[ba]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_ack
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ALLPIN_LPM_MODE
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[bc]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_UART_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetPLLClockFreq
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[43]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[2d]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>__rt_udiv10</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[38]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3d]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[c2]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c3]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[c4]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>App_Handle</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, app.o(i.App_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = App_Handle &rArr; iap_write_flash &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_write_flash
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_recv_proc
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_load_app
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_ack
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deinit_system
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>App_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app.o(i.App_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = App_Init &rArr; uart_init &rArr; LL_UART_Init &rArr; LL_RCC_GetSystemClockFreq &rArr; LL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_load_app
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_word
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Systick_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>LL_FLASH_Program_Word</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_Program_Word))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LL_FLASH_Program_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_Group2_EnableOperationClock
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_Group2_EnableBusClock
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_Group2_DisableOperationClock
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_UnlockFlash
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_StartProgram
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_LockFlash
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_IsActiveFlag_ProgramFinish
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_IsActiveFlag_KEYError
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_IsActiveFlag_ClockError
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_IsActiveFlag_AuthenticationError
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_GetFlashLockStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_program_buff
</UL>

<P><STRONG><a name="[5d]"></a>LL_FLASH_SectorErase</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_SectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_FLASH_SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_Group2_EnableOperationClock
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_Group2_EnableBusClock
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_Group2_DisableOperationClock
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_UnlockFlash
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_StartErase
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SetFlashEraseType
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_LockFlash
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_IsActiveFlag_KEYError
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_IsActiveFlag_EraseFinish
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_IsActiveFlag_ClockError
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_IsActiveFlag_AuthenticationError
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_GetFlashLockStatus
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_ClearFlag_EraseFinish
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Handle
</UL>

<P><STRONG><a name="[75]"></a>LL_GPIO_ALLPIN_LPM_MODE</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, fm33lc0xx_ll_gpio.o(i.LL_GPIO_ALLPIN_LPM_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LL_GPIO_ALLPIN_LPM_MODE &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_StructInit
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetOutputPin
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_GPIO_Config
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deinit_system
</UL>

<P><STRONG><a name="[79]"></a>LL_GPIO_Init</STRONG> (Thumb, 398 bytes, Stack size 20 bytes, fm33lc0xx_ll_gpio.o(i.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ALLPIN_LPM_MODE
</UL>

<P><STRONG><a name="[77]"></a>LL_GPIO_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fm33lc0xx_ll_gpio.o(i.LL_GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ALLPIN_LPM_MODE
</UL>

<P><STRONG><a name="[82]"></a>LL_RCC_GetAHBClockFreq</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, fm33lc0xx_ll_rcc.o(i.LL_RCC_GetAHBClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_RCC_GetAHBClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_UART_Init
</UL>

<P><STRONG><a name="[83]"></a>LL_RCC_GetAPB1ClockFreq</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, fm33lc0xx_ll_rcc.o(i.LL_RCC_GetAPB1ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_RCC_GetAPB1ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_UART_Init
</UL>

<P><STRONG><a name="[86]"></a>LL_RCC_GetAPB2ClockFreq</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, fm33lc0xx_ll_rcc.o(i.LL_RCC_GetAPB2ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_RCC_GetAPB2ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_UART_Init
</UL>

<P><STRONG><a name="[7a]"></a>LL_RCC_GetPLLClockFreq</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, fm33lc0xx_ll_rcc.o(i.LL_RCC_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetRCHFClockFreq
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[7f]"></a>LL_RCC_GetRC4MClockFreq</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, fm33lc0xx_ll_rcc.o(i.LL_RCC_GetRC4MClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_UART_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[7b]"></a>LL_RCC_GetRCHFClockFreq</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, fm33lc0xx_ll_rcc.o(i.LL_RCC_GetRCHFClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_UART_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClockFreq
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetPLLClockFreq
</UL>

<P><STRONG><a name="[7e]"></a>LL_RCC_GetSystemClockFreq</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, fm33lc0xx_ll_rcc.o(i.LL_RCC_GetSystemClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LL_RCC_GetSystemClockFreq &rArr; LL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetRCHFClockFreq
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetRC4MClockFreq
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSBClockFreqToSysclk
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetPLLClockFreq
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_UART_Init
</UL>

<P><STRONG><a name="[80]"></a>LL_RCC_GetUSBClockFreqToSysclk</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fm33lc0xx_ll_rcc.o(i.LL_RCC_GetUSBClockFreqToSysclk))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[81]"></a>LL_UART_Init</STRONG> (Thumb, 700 bytes, Stack size 32 bytes, fm33lc0xx_ll_uart.o(i.LL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LL_UART_Init &rArr; LL_RCC_GetSystemClockFreq &rArr; LL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClockFreq
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetRCHFClockFreq
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetRC4MClockFreq
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetAPB1ClockFreq
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetAHBClockFreq
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_Group3_EnableBusClock
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_Group1_EnableOperationClock
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetAPB2ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[5f]"></a>MF_GPIO_Config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, mf_config.o(i.MF_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MF_GPIO_Config &rArr; LL_GPIO_ALLPIN_LPM_MODE &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ALLPIN_LPM_MODE
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Init
</UL>

<P><STRONG><a name="[2b]"></a>SystemInit</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, system_fm33lc0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>UART0_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, uart.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_irq_proc
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr_rx_timeout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>User_Systick_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, systick.o(i.User_Systick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = User_Systick_Init &rArr; clock_init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Init
</UL>

<P><STRONG><a name="[7c]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, fm33lc0xx_ll_lpuart.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClockFreq
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetPLLClockFreq
</UL>

<P><STRONG><a name="[8e]"></a>cal_crc16</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, iap.o(i.cal_crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cal_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_recv_proc
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_ack
</UL>

<P><STRONG><a name="[8c]"></a>flash_program_buff</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, flash.o(i.flash_program_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = flash_program_buff &rArr; LL_FLASH_Program_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_buff
</UL>

<P><STRONG><a name="[61]"></a>flash_read_word</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, flash.o(i.flash_read_word))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Init
</UL>

<P><STRONG><a name="[8d]"></a>flash_write_buff</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, flash.o(i.flash_write_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = flash_write_buff &rArr; flash_program_buff &rArr; LL_FLASH_Program_Word
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_program_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_write_flash
</UL>

<P><STRONG><a name="[5c]"></a>iap_ack</STRONG> (Thumb, 144 bytes, Stack size 88 bytes, iap.o(i.iap_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = iap_ack &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit_buf
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_crc16
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_write_flash
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Handle
</UL>

<P><STRONG><a name="[5a]"></a>iap_load_app</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, iap.o(i.iap_load_app))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iap_load_app
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Handle
</UL>

<P><STRONG><a name="[57]"></a>iap_recv_proc</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, iap.o(i.iap_recv_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = iap_recv_proc &rArr; uart_recv_data
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_data
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Handle
</UL>

<P><STRONG><a name="[58]"></a>iap_write_flash</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, iap.o(i.iap_write_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = iap_write_flash &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_buff
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_ack
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Handle
</UL>

<P><STRONG><a name="[3c]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = main &rArr; App_Handle &rArr; iap_write_flash &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[93]"></a>uart_get_rx_cnt</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(i.uart_get_rx_cnt))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_data
</UL>

<P><STRONG><a name="[62]"></a>uart_init</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, uart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = uart_init &rArr; LL_UART_Init &rArr; LL_RCC_GetSystemClockFreq &rArr; LL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_UART_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Init
</UL>

<P><STRONG><a name="[90]"></a>uart_recv_data</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, uart.o(i.uart_recv_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_recv_data
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_rx_cnt
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_recv_proc
</UL>

<P><STRONG><a name="[8f]"></a>uart_transmit_buf</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, uart.o(i.uart_transmit_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_transmit_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_ack
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[59]"></a>deinit_system</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, app.o(i.deinit_system))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = deinit_system &rArr; LL_GPIO_ALLPIN_LPM_MODE &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ALLPIN_LPM_MODE
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Handle
</UL>

<P><STRONG><a name="[8a]"></a>LL_RCC_SetRCHFFrequency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, systick.o(i.LL_RCC_SetRCHFFrequency))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[8b]"></a>LL_RCC_SetRCHFTrimValue</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, systick.o(i.LL_RCC_SetRCHFTrimValue))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[89]"></a>clock_init</STRONG> (Thumb, 316 bytes, Stack size 8 bytes, systick.o(i.clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clock_init
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetRCHFTrimValue
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetRCHFFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Systick_Init
</UL>

<P><STRONG><a name="[92]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, uart.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[88]"></a>uart_isr_rx_timeout</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(i.uart_isr_rx_timeout))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>uart_recv_irq_proc</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, uart.o(i.uart_recv_irq_proc))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>LL_FLASH_ClearFlag_EraseFinish</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_ClearFlag_EraseFinish))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[65]"></a>LL_FLASH_GetFlashLockStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_GetFlashLockStatus))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[6d]"></a>LL_FLASH_IsActiveFlag_AuthenticationError</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_IsActiveFlag_AuthenticationError))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[6b]"></a>LL_FLASH_IsActiveFlag_ClockError</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_IsActiveFlag_ClockError))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[74]"></a>LL_FLASH_IsActiveFlag_EraseFinish</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_IsActiveFlag_EraseFinish))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[6c]"></a>LL_FLASH_IsActiveFlag_KEYError</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_IsActiveFlag_KEYError))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[6e]"></a>LL_FLASH_IsActiveFlag_ProgramFinish</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_IsActiveFlag_ProgramFinish))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
</UL>

<P><STRONG><a name="[6f]"></a>LL_FLASH_LockFlash</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_LockFlash))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[71]"></a>LL_FLASH_SetFlashEraseType</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_SetFlashEraseType))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[72]"></a>LL_FLASH_StartErase</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_StartErase))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[67]"></a>LL_FLASH_StartProgram</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_StartProgram))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
</UL>

<P><STRONG><a name="[69]"></a>LL_FLASH_UnlockFlash</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_FLASH_UnlockFlash))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[70]"></a>LL_RCC_Group2_DisableOperationClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_RCC_Group2_DisableOperationClock))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[64]"></a>LL_RCC_Group2_EnableBusClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_RCC_Group2_EnableBusClock))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[66]"></a>LL_RCC_Group2_EnableOperationClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.LL_RCC_Group2_EnableOperationClock))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[68]"></a>__get_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.__get_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[6a]"></a>__set_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fm33lc0xx_ll_flash.o(i.__set_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Program_Word
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SectorErase
</UL>

<P><STRONG><a name="[78]"></a>LL_GPIO_SetOutputPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33lc0xx_ll_gpio.o(i.LL_GPIO_SetOutputPin))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ALLPIN_LPM_MODE
</UL>

<P><STRONG><a name="[85]"></a>LL_RCC_Group1_EnableOperationClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_ll_uart.o(i.LL_RCC_Group1_EnableOperationClock))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_UART_Init
</UL>

<P><STRONG><a name="[84]"></a>LL_RCC_Group3_EnableBusClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_ll_uart.o(i.LL_RCC_Group3_EnableBusClock))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_UART_Init
</UL>

<P><STRONG><a name="[2e]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[54]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[51]"></a>_printf_post_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[50]"></a>_printf_pre_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[46]"></a>_printf_truncate_signed</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[47]"></a>_printf_truncate_unsigned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<HR></body></html>
